{
    "openapi": "3.0.0",
    "info": {
        "version": "3.0.1",
        "title": "test_requisition",
        "license": {
            "name": "Apache-2.0",
            "url": ""
        },
        "contact": {}
    },
    "servers": [
        {
            "url": "http://localhost:5000",
            "variables": {
                "successCode": {
                    "enum": [
                        "200"
                    ],
                    "default": "200"
                }
            }
        }
    ],
    "paths": {
        "/requisitions": {
            "get": {
                "summary": "List of requisitions",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "list of requisitions",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "object": {
                                            "type": "array",
                                            "x-count": 26,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Create a new requisition",
                "operationId": "",
                "requestBody": {
                    "description": "Request body to create new requisition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requisitionData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "new requisition created successfully",
                        "headers": {
                            "x-next": {
                                "description": "Requisition",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "items": {
                                        "$ref": "#/components/schemas/requisition"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "obj",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "allowEmptyValue": true
                    }
                ]
            },
            "put": {
                "summary": "Update existing requisition",
                "operationId": "",
                "requestBody": {
                    "description": "Request body to update a requisition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requisitionData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "new requisition updated successfully",
                        "headers": {
                            "x-next": {
                                "description": "Requisition",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "items": {
                                        "$ref": "#/components/schemas/requisition"
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "obj",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "allowEmptyValue": true
                    }
                ]
            }
        },
        "/requisitions/{id}": {
            "get": {
                "summary": "Find requisition by ID",
                "operationId": "{id}",
                "tags": [
                    "requisitions"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/requisition"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "requisition api not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of requisition to fetch"
                    }
                ]
            },
            "delete": {
                "summary": "Delete requisition by ID",
                "operationId": "{id}",
                "tags": [
                    "requisitions"
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "404": {
                        "description": "requisition api not found"
                    }
                },
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        },
                        "description": "ID of requisition to fetch"
                    }
                ]
            }
        },
        "/requisitions/approve": {
            "post": {
                "summary": "Approve a requisition",
                "operationId": "",
                "requestBody": {
                    "description": "Request body to approve a requisition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/requisitionData"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "requisition approved successfully",
                        "headers": {
                            "x-next": {
                                "description": "Requisition",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "*/*": {
                                "schema": {}
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        },
        "/requisitions/sendToVendor": {
            "post": {
                "summary": "Assign requisitions to vendors",
                "operationId": "",
                "requestBody": {
                    "description": "Assign requisitions to vendors",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "array",
                                "x-count": 2,
                                "items": {
                                    "$ref": "#/components/schemas/requisitionData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "list of requisition and vendor mappings",
                        "headers": {
                            "x-next": {
                                "description": "list of requisition and vendor mappings",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "object": {
                                            "type": "array",
                                            "x-count": 4,
                                            "items": {
                                                "$ref": "#/components/schemas/vendorRequisitionBucket"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "parameters": []
            }
        }
    },
    "components": {
        "schemas": {
            "department": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}"
                    }
                }
            },
            "currency": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "countryName": {
                        "type": "string",
                        "default": "Reactive secured line",
                        "x-faker": "{{address.country}}"
                    },
                    "countryCode": {
                        "type": "string",
                        "x-faker": "{{address.countryCode}}"
                    },
                    "code": {
                        "type": "string",
                        "x-faker": "{{finance.currencyCode}}"
                    }
                }
            },
            "vendor": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "firstName": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} ",
                        "description": "firstName"
                    },
                    "middleName": {
                        "type": "string",
                        "x-faker": "{{name.middleName}} ",
                        "description": "middleName"
                    },
                    "lastName": {
                        "type": "string",
                        "x-faker": "{{name.lastName}} ",
                        "description": "lastName"
                    },
                    "phoneNumber": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "phone.phoneNumber",
                        "description": "phoneNumber"
                    },
                    "email": {
                        "type": "string",
                        "x-faker": "{{internet.email}}",
                        "description": "email"
                    },
                    "address": {
                        "type": "string",
                        "x-faker": "{{address.streetName}} {{address.state}},{{address.zipCodeByState}} {{address.country}}",
                        "description": "vendor address"
                    },
                    "zipCode": {
                        "type": "string",
                        "x-faker": "{{address.zipCodeByState}}",
                        "description": "zipCode"
                    },
                    "status": {
                        "type": "string",
                        "default": "ACTIVE",
                        "description": "status"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "createdOn"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "createdBy"
                    },
                    "updatedOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "updatedOn"
                    },
                    "updatedBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "updatedBy"
                    }
                }
            },
            "vendorRequisitionBucket": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "status": {
                        "type": "string",
                        "default": "ASSIGNED_TO_VENDOR",
                        "description": "status"
                    },
                    "stages": {
                        "type": "string",
                        "default": "ASSIGNED_TO_VENDOR",
                        "description": "stages"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "createdOn"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "createdBy"
                    },
                    "updatedOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "updatedOn"
                    },
                    "updatedBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "updatedBy"
                    },
                    "requisition": {
                        "$ref": "#/components/schemas/requisition"
                    },
                    "vendor": {
                        "$ref": "#/components/schemas/vendor"
                    }
                }
            },
            "requisition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id of the Requisition"
                    },
                    "requisitionNo": {
                        "type": "string",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id of the Requisition"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "created date of the Requisition"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "createdBy use for requester of  Requisition"
                    },
                    "updatedOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "updated date of the Requisition"
                    },
                    "updatedBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "updatedBy use for requester of  Requisition"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of the requisition"
                    },
                    "progressStage": {
                        "type": "string",
                        "description": "current stage of the requisition"
                    },
                    "financialYear": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 2021, \"max\": 100000 })",
                        "description": "financial year of the Requisition"
                    },
                    "type": {
                        "type": "string",
                        "description": "type of the requisition"
                    },
                    "totalPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "total amount of the Requisition"
                    },
                    "notes": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}",
                        "description": "note for the Requisition"
                    },
                    "dueDate": {
                        "type": "string",
                        "x-faker": "{{datatype.future}}",
                        "description": "Due date use of a Requisition"
                    },
                    "department": {
                        "description": "department of approve purchase order list department ",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                            },
                            "name": {
                                "type": "string",
                                "x-faker": "{{commerce.department}}"
                            }
                        }
                    },
                    "currency": {
                        "description": "curreny of approve purchase order payment",
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "integer",
                                "format": "int64",
                                "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                            },
                            "countryName": {
                                "type": "string",
                                "default": "Reactive secured line",
                                "x-faker": "{{address.country}}"
                            },
                            "countryCode": {
                                "type": "string",
                                "x-faker": "{{address.countryCode}}"
                            },
                            "code": {
                                "type": "string",
                                "x-faker": "{{finance.currencyCode}}"
                            }
                        }
                    },
                    "requisitionLineItemLists": {
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "description": "requisitionLineItemLists of the requisition",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                                },
                                "price": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1000, \"max\": 10000 })"
                                },
                                "itemDescription": {
                                    "type": "string",
                                    "x-faker": "commerce.productName"
                                },
                                "orderQuantity": {
                                    "type": "integer",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                                },
                                "ratePerItem": {
                                    "type": "integer",
                                    "x-faker": "datatype.number({ \"min\": 1000, \"max\": 100000 })"
                                }
                            }
                        }
                    }
                }
            },
            "requisitionLineItemLists": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1000, \"max\": 10000 })"
                    },
                    "itemDescription": {
                        "type": "string",
                        "x-faker": "commerce.productName"
                    },
                    "orderQuantity": {
                        "type": "integer",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                    },
                    "ratePerItem": {
                        "type": "integer",
                        "x-faker": "datatype.number({ \"min\": 1000, \"max\": 100000 })"
                    }
                }
            },
            "requisitionData": {
                "type": "object",
                "properties": {
                    "requisitionId": {
                        "description": "selected requisition id",
                        "type": "integer"
                    },
                    "departmentId": {
                        "description": "selected department id",
                        "type": "integer"
                    },
                    "currencyId": {
                        "description": "selected currency id",
                        "type": "integer"
                    },
                    "financialYear": {
                        "description": "Year of the requisition raised",
                        "type": "string"
                    },
                    "progressStage": {
                        "description": "NEW",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "notes": {
                        "description": "additional comments on the requisition",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the requisition",
                        "type": "string"
                    },
                    "dueDate": {
                        "type": "string",
                        "x-faker": "{{datatype.future}}",
                        "description": "Due date use of a Requisition"
                    },
                    "user": {
                        "description": "requester",
                        "type": "string"
                    },
                    "requisitionFile": {
                        "description": "list of extra budgetory files",
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "description": "extra budgetory files list of the requisition",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                                }
                            }
                        }
                    },
                    "requisitionLineItemFile": {
                        "description": "list of excel file containing the data of requisition line items",
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "description": "list of the requisition line items",
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                                },
                                "price": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1000, \"max\": 10000 })"
                                },
                                "itemDescription": {
                                    "type": "string",
                                    "x-faker": "commerce.productName"
                                },
                                "orderQuantity": {
                                    "type": "integer",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                                },
                                "ratePerItem": {
                                    "type": "integer",
                                    "x-faker": "datatype.number({ \"min\": 1000, \"max\": 100000 })"
                                }
                            }
                        }
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "BasicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        },
        "links": {},
        "callbacks": {}
    },
    "security": [
        {
            "BasicAuth": []
        }
    ]
}