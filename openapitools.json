{
    "openapi": "3.0.0",
    "info": {
        "version": "3.0.1",
        "title": "procument",
        "license": {
            "name": "MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "variables": {
                "successCode": {
                    "enum": [
                        "200"
                    ],
                    "default": "200"
                }
            }
        }
    ],
    "paths": {
        "/searchDepartment": {
            "get": {
                "summary": "Details of department",
                "operationId": "",
                "tags": [
                    "department"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Details of department",
                        "headers": {
                            "x-next": {
                                "description": "Department List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch department Successfully"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/department"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchCurrency": {
            "get": {
                "summary": "Details of currency",
                "operationId": "",
                "tags": [
                    "currency"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Details of currency",
                        "headers": {
                            "x-next": {
                                "description": "Currency List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch currency Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/currency"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchRequisition": {
            "get": {
                "summary": "Details about a user",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Details about a user",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 26,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/deleteRequisition/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "Delete Requisition",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Delete Requisition List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Delete Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addRequisition": {
            "post": {
                "summary": "Details about a Requester",
                "operationId": "createRequisition",
                "requestBody": {
                    "description": "Request body to create requistion",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/requisitionData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Delete Requisition List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getRequisition/{requisitionId}": {
            "parameters": [
                {
                    "name": "requisitionId",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a user",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "Details about a user",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/requisition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/updateRequisition": {
            "post": {
                "summary": "Edit Requester Detail",
                "operationId": "",
                "requestBody": {
                    "description": "Edit Requisition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/updateRequisitionData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Edit Requisition",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Edit Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/approveRequisition": {
            "post": {
                "summary": "Details about Approve Requisition",
                "operationId": "approverequisition",
                "requestBody": {
                    "description": "Request body to approve requisition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/approveRequisition"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Approved Requisition Success"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchRecievedRfp": {
            "get": {
                "summary": "Details about a RFP",
                "operationId": "",
                "tags": [
                    "getrfp"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Details about RFP",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 13,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getRequisitionRfp/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a get Requisition by id",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "Details about a get Requisition by id",
                        "headers": {
                            "x-next": {
                                "description": "Rqruisition by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/requisition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addStatusRfp": {
            "post": {
                "summary": "Add status to RFP",
                "operationId": "addstatusRfp",
                "requestBody": {
                    "description": "Request body to add status to Rfp",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/addStatusRfp"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add status Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchRecievedRfq": {
            "get": {
                "summary": "Details about a RFQ",
                "operationId": "",
                "tags": [
                    "getrfq"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Details about RFQ",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 13,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getRecievedRfq/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a get Requisition by id",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "Details about a get Requisition by id",
                        "headers": {
                            "x-next": {
                                "description": "Requisition by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/recievedrfq"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addStatusRfq": {
            "post": {
                "summary": "Add status to RFP",
                "operationId": "addstatusRfp",
                "requestBody": {
                    "description": "Request body to add status to Rfp",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/addStatusRfp"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add status Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchGeneratePo": {
            "get": {
                "summary": "Details about a Generate PO",
                "operationId": "",
                "tags": [
                    "generate po"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Details about Purchase order",
                        "headers": {
                            "x-next": {
                                "description": "Generate Purchase Order List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 13,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getGeneratePo/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a purchase order",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "Details about a purchase order",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/requisition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addGeneratePoDetail": {
            "post": {
                "summary": "Add generate po detail",
                "operationId": "generatePoDetail",
                "requestBody": {
                    "description": "Request body to add generate po detail",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/generatePoDetail"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getContacts": {
            "get": {
                "summary": "Contact Detail",
                "operationId": "",
                "tags": [
                    "contactdetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "contact detail",
                        "headers": {
                            "x-next": {
                                "description": "contact List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/deleteContact/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "Delete Contact List",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Delete Contact List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "delete contact successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addContact": {
            "post": {
                "summary": "Details about a Contact",
                "operationId": "createContact",
                "requestBody": {
                    "description": "Request body to create contact",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/contactData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Contact Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/editContact": {
            "post": {
                "summary": "Edit contact",
                "operationId": "editContact",
                "requestBody": {
                    "description": "Request body to edit contact",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/contactData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Edit Contact Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getContact/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Get Edit Contact Detail",
                "operationId": "",
                "tags": [
                    "contactdetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get edit contact detail",
                        "headers": {
                            "x-next": {
                                "description": "contact List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/userData"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fetchInvoice": {
            "get": {
                "summary": "Invoice Detail",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "Invoice detail",
                        "headers": {
                            "x-next": {
                                "description": "Invoice List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 10,
                                            "items": {
                                                "$ref": "#/components/schemas/invoiceList"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/deleteInvoice/1": {
            "delete": {
                "summary": "Delete invoice List",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Delete invoice List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "delete invoice successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/viewInvoice/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Invoice Detail",
                "operationId": "",
                "tags": [
                    "invoice"
                ],
                "responses": {
                    "200": {
                        "description": "Invoice detail",
                        "headers": {
                            "x-next": {
                                "description": "Invoice detail",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/invoicedetail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getBuyers": {
            "get": {
                "summary": "Buyer Detail",
                "operationId": "",
                "tags": [
                    "buyerdetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Buyer detail",
                        "headers": {
                            "x-next": {
                                "description": "Buyer List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/setBuyers": {
            "post": {
                "summary": "Details about a buyer",
                "operationId": "setbuyer",
                "requestBody": {
                    "description": "Request body to create contact",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/selectBuyersData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Buyer Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/searchCommittee": {
            "get": {
                "summary": "Committee Detail",
                "operationId": "",
                "tags": [
                    "committeedetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "committee detail",
                        "headers": {
                            "x-next": {
                                "description": "committee List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getCommitteeType": {
            "get": {
                "summary": "Detail of Committee Type",
                "operationId": "",
                "tags": [
                    "committeetype"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Detail of Committee Type",
                        "headers": {
                            "x-next": {
                                "description": "Committee Type",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch committee type Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/committee"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addCommittee": {
            "post": {
                "summary": "Details about a set committee members",
                "operationId": "setbuyer",
                "requestBody": {
                    "description": "Request body to set committee memberse",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/selectCommitteeMembers"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Committee Members Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/addVendor": {
            "post": {
                "summary": "Details about a vendor",
                "operationId": "",
                "requestBody": {
                    "description": "Request body to set vendor",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/vendorData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Vendor Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "department": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}"
                    }
                }
            },
            "currency": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "countryName": {
                        "type": "string",
                        "default": "Reactive secured line",
                        "x-faker": "{{address.country}}"
                    },
                    "countryCode": {
                        "type": "string",
                        "x-faker": "{{address.countryCode}}"
                    },
                    "code": {
                        "type": "string",
                        "x-faker": "{{finance.currencyCode}}"
                    }
                }
            },
            "requisition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "totalPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "notes": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}"
                    },
                    "roleName": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}"
                    },
                    "department": {
                        "$ref": "#/components/schemas/department"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currency"
                    },
                    "status": {
                        "type": "string"
                    },
                    "requisitionType": {
                        "type": "string"
                    },
                    "requistionItem": {
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems"
                        }
                    }
                }
            },
            "requisitionData": {
                "type": "object",
                "properties": {
                    "requestor": {
                        "description": "role of the requester",
                        "type": "string"
                    },
                    "financialYear": {
                        "description": "Year of the requisition raised",
                        "type": "string"
                    },
                    "departmentId": {
                        "description": "selected department id",
                        "type": "integer"
                    },
                    "currencyId": {
                        "description": "selected currency id",
                        "type": "integer"
                    },
                    "requisitionType": {
                        "type": "string"
                    },
                    "purpose": {
                        "description": "Purpose of the requisition",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the requisition, value should be the requisitionStatus",
                        "type": "string"
                    },
                    "files": {
                        "description": "list of object containing description and file",
                        "type": "object"
                    },
                    "requisitionLineItems": {
                        "description": "list of requisition line items data",
                        "type": "array"
                    },
                    "requisitionLineItemFiles": {
                        "description": "list of excel file containing the data of requisition line items",
                        "type": "array"
                    }
                }
            },
            "updateRequisitionData": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "edit requisition id",
                        "type": "integer"
                    },
                    "requestor": {
                        "description": "role of the requester",
                        "type": "string"
                    },
                    "financialYear": {
                        "description": "Year of the requisition raised",
                        "type": "string",
                        "x-faker": "date.past"
                    },
                    "departmentId": {
                        "description": "selected department id",
                        "type": "integer"
                    },
                    "currencyId": {
                        "description": "selected currency id",
                        "type": "integer"
                    },
                    "purpose": {
                        "description": "Purpose of the requisition",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the requisition, value should be the requisitionStatus",
                        "type": "string"
                    },
                    "files": {
                        "description": "list of object containing description and file",
                        "type": "object"
                    },
                    "requisitionLineItems": {
                        "description": "list of requisition line items data",
                        "type": "array"
                    },
                    "requisitionLineItemFiles": {
                        "description": "list of excel file containing the data of requisition line items",
                        "type": "array"
                    }
                }
            },
            "userData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "company": {
                        "type": "string",
                        "x-faker": "{{company.companyName}}"
                    },
                    "email": {
                        "type": "string",
                        "x-faker": "{{internet.email}}"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}"
                    },
                    "position": {
                        "type": "string",
                        "x-faker": "{{company.catchPhrase}}"
                    },
                    "profile": {
                        "type": "string",
                        "x-faker": "{{image.imageUrl}}"
                    },
                    "contNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1000000000, \"max\": 9999999999 })"
                    }
                }
            },
            "invoiceList": {
                "type": "object",
                "properties": {
                    "RequisitionsNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "RequestDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "RequestDepartment": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}"
                    },
                    "Requestor": {
                        "type": "string",
                        "x-faker": "{{internet.email}}"
                    },
                    "RequisitionsTotal": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "{{commerce.price}}"
                    },
                    "status": {
                        "type": "string",
                        "default": "completed"
                    }
                }
            },
            "invoicedetail": {
                "type": "object",
                "properties": {
                    "requisitionsNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "requestDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "requestDepartment": {
                        "$ref": "#/components/schemas/department"
                    },
                    "requestor": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}"
                    },
                    "requisitionsTotal": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "tax": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.float({ \"min\": 1, \"max\": 10 })"
                    },
                    "status": {
                        "type": "string",
                        "default": "completed"
                    },
                    "invoiceItem": {
                        "type": "array",
                        "x-count": 2,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems"
                        }
                    }
                }
            },
            "selectBuyersData": {
                "type": "object",
                "properties": {
                    "requisitionID": {
                        "type": "string"
                    },
                    "buyersId": {
                        "type": "array"
                    }
                }
            },
            "committee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}"
                    }
                }
            },
            "selectCommitteeMembers": {
                "type": "object",
                "properties": {
                    "userID": {
                        "type": "string"
                    },
                    "membersId": {
                        "type": "array"
                    }
                }
            },
            "requisitionItems": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1000, \"max\": 10000 })"
                    },
                    "itemDescription": {
                        "type": "string",
                        "x-faker": "commerce.productName"
                    },
                    "orderQuantity": {
                        "type": "integer",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })"
                    },
                    "ratePerItem": {
                        "type": "integer",
                        "x-faker": "datatype.number({ \"min\": 1000, \"max\": 100000 })"
                    }
                }
            },
            "approveRequisition": {
                "type": "object",
                "properties": {
                    "requisitionId": {
                        "type": "string"
                    },
                    "roleName": {
                        "type": "string"
                    }
                }
            },
            "addStatusRfp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string"
                    }
                }
            },
            "generatePoDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "paymentTerms": {
                        "type": "string"
                    },
                    "otherTerms": {
                        "type": "string"
                    }
                }
            },
            "contactData": {
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "profile": {
                        "type": "string"
                    },
                    "contactNo": {
                        "type": "integer",
                        "format": "int64",
                        "default": "+1234567859"
                    }
                }
            },
            "recievedrfq": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "totalPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "notes": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}"
                    },
                    "roleName": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}"
                    },
                    "department": {
                        "$ref": "#/components/schemas/department"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currency"
                    },
                    "status": {
                        "type": "string"
                    },
                    "requisitionType": {
                        "type": "string"
                    },
                    "requistionItem": {
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems"
                        }
                    },
                    "vendoreDetail": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-faker": "{{name.firstName}}"
                            },
                            "email": {
                                "type": "string",
                                "x-faker": "{{internet.email}}"
                            },
                            "nature": {
                                "type": "string"
                            },
                            "location": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "integer",
                                "format": "int64",
                                "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000000000 })"
                            },
                            "relation": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "vendorData": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "fatherName": {
                        "type": "string"
                    },
                    "designation": {
                        "type": "string"
                    },
                    "companyName": {
                        "type": "string"
                    },
                    "directorName": {
                        "type": "string"
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "business": {
                        "type": "string"
                    },
                    "legalStatus": {
                        "type": "string"
                    },
                    "companyCategory": {
                        "type": "string"
                    },
                    "captcha": {
                        "type": "string"
                    },
                    "panNo": {
                        "type": "string"
                    },
                    "gender": {
                        "type": "string"
                    },
                    "phoneNo": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "RegistrationNo": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "brithDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "bidder": {
                        "type": "string"
                    },
                    "postalCode": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "establishment": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "BasicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "BasicAuth": []
        }
    ]
}