{
    "openapi": "3.0.0",
    "info": {
        "version": "3.0.1",
        "title": "procument",
        "license": {
            "name": "MIT"
        }
    },
    "servers": [
        {
            "url": "/",
            "variables": {
                "successCode": {
                    "enum": [
                        "200"
                    ],
                    "default": "200"
                }
            }
        }
    ],
    "paths": {
        "/department": {
            "get": {
                "summary": "Details of department",
                "operationId": "",
                "tags": [
                    "department"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "searchDepartment is used to get the list of the departments.",
                        "headers": {
                            "x-next": {
                                "description": "Department List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch department Successfully"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/department"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add department",
                "operationId": "",
                "requestBody": {
                    "description": "add new department",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/department"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Add Department successfully",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "add department Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/department/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "detail about deleteDepartment",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "Delete department is use for delete department by id",
                        "headers": {
                            "x-next": {
                                "description": "Delete department ",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Delete Department Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Details about a selected department",
                "operationId": "",
                "tags": [],
                "responses": {
                    "200": {
                        "description": "department/{id} is used for get department by id",
                        "headers": {
                            "x-next": {
                                "description": "department List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/department"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Edit department Detail",
                "operationId": "",
                "requestBody": {
                    "description": "updateDepartment is used for modifing department",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/department"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Edit Requisition",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Edit Department Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency": {
            "get": {
                "summary": "Details of currency",
                "operationId": "",
                "tags": [
                    "currency"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "searchCurrency is used to get the list of the Currencies",
                        "headers": {
                            "x-next": {
                                "description": "Currency List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch currency Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/currency"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add currency",
                "operationId": "",
                "requestBody": {
                    "description": "add new currency",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/currency"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Add currency successfully",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "add currency Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "detail about deleteCurrency",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "Delete currency is use for delete currency by id",
                        "headers": {
                            "x-next": {
                                "description": "Delete currency ",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Delete Currency Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Details about a selected currency",
                "operationId": "",
                "tags": [],
                "responses": {
                    "200": {
                        "description": "currency/{id} is used for get currency by id",
                        "headers": {
                            "x-next": {
                                "description": "currency List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/currency"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Edit currency Detail",
                "operationId": "",
                "requestBody": {
                    "description": "updateDepartment is used for modifing currency",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/currency"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Edit Currency",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Edit Currency Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/requisitions": {
            "get": {
                "summary": "Details about a user",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "searchRequisition is use to get list of requisitions",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 26,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Details about a Requester",
                "operationId": "createRequisition",
                "requestBody": {
                    "description": "Request body to create requistion",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/requisitionData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "addRequisition use for creating new",
                        "headers": {
                            "x-next": {
                                "description": "Delete Requisition List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/requisitions/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "detail about deleteRequisition",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "Delete Requisition is use for delete requisition by id",
                        "headers": {
                            "x-next": {
                                "description": "deleteRequisition ",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Delete Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Details about a user",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "getRequisition/{id} is used for get requisition by id",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/requisition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Edit Requester Detail",
                "operationId": "",
                "requestBody": {
                    "description": "updateRequisition is used for modifing requisition",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/updateRequisitionData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Edit Requisition",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Edit Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/requisitions/{id}/{type}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "type",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "post": {
                "summary": "Details about Approve Requisition",
                "operationId": "approverequisition",
                "requestBody": {
                    "description": "approveRequisition used for get approve requisition list",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/approveRequisition"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Approved Requisition Success"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rfp": {
            "get": {
                "summary": "Details about a RFP",
                "operationId": "",
                "tags": [
                    "getrfp"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "searchRecivedRFP used for get recievedRFP list",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 13,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add status to RFP",
                "operationId": "addstatusRfp",
                "requestBody": {
                    "description": "addStatusRfp add status to frp like approved , wating etc",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/addStatusRfp"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add status Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rfp/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a get Requisition by id",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "getRequisitionRfp/{id} used for get requisitionRFP by id ",
                        "headers": {
                            "x-next": {
                                "description": "Rqruisition by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/requisition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rfq": {
            "get": {
                "summary": "Details about a RFQ",
                "operationId": "",
                "tags": [
                    "getrfq"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "searchRecievedRfq is used for get list of RecievedRfq",
                        "headers": {
                            "x-next": {
                                "description": "Requisiton List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 13,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add status to RFP",
                "operationId": "addstatusRfp",
                "requestBody": {
                    "description": "addStatusRfq add status to frq like approved , wating etc",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/addStatusRfp"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add status Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/rfq/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "getRecievedRfq/{id} used for get recievedRfq by id from list",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "Details about a get Requisition by id",
                        "headers": {
                            "x-next": {
                                "description": "Requisition by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/recievedrfq"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseorders": {
            "get": {
                "summary": "Details about a Generate PO",
                "operationId": "",
                "tags": [
                    "generate po"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "/searchGeneratePo used for get Generate Purchase Order list",
                        "headers": {
                            "x-next": {
                                "description": "Generate Purchase Order List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 13,
                                            "items": {
                                                "$ref": "#/components/schemas/requisition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Add generate po detail",
                "operationId": "generatePoDetail",
                "requestBody": {
                    "description": "/addGeneratePoDetails used Create or add new Generate Purchse Order",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/generatePoDetail"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseorders/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a purchase order",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "/getGeneratePo/{id} used to get Generated PurchaseOrder by id",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/requisition"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseorders/{id}/{type}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                },
                {
                    "name": "type",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a purchase order",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "/getApprovePo/{id} used for get Approved Purchase Order by id from list",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/approvePo"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Details for Approve PURCHASE ORDER",
                "operationId": "createContact",
                "requestBody": {
                    "description": "Approve PURCHASE ORDER",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/addapprovePo"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Approve PURCHASE ORDER Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts": {
            "get": {
                "summary": "Contact Detail",
                "operationId": "",
                "tags": [
                    "contactdetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "getContacts used for get contacts list",
                        "headers": {
                            "x-next": {
                                "description": "contact List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Details about a Contact",
                "operationId": "createContact",
                "requestBody": {
                    "description": "addContact used for add new contact in list of contacts ",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/contactData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Contact Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contacts/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "delete": {
                "summary": "Delete Contact List",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "deleteContact/{id} used for delete the contact from contact list",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "delete contact successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "getContact used for get contact from contact list by id",
                "operationId": "",
                "tags": [
                    "contactdetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get edit contact detail",
                        "headers": {
                            "x-next": {
                                "description": "contact List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/userData"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Edit contact",
                "operationId": "editContact",
                "requestBody": {
                    "description": "editContact used for update contact from contacts list ",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/contactData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Edit Contact Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invitation": {
            "post": {
                "summary": "Details about a invite user",
                "operationId": "",
                "requestBody": {
                    "description": "sendInvitation used for send invitaion to the contact list members",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/invitationData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Send invitation Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoice": {
            "get": {
                "summary": "Invoice Detail",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "fetchInvoice used for get invoices list",
                        "headers": {
                            "x-next": {
                                "description": "Invoice List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 10,
                                            "items": {
                                                "$ref": "#/components/schemas/invoiceList"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/invoice/{id}": {
            "delete": {
                "summary": "Delete invoice List",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "/deleteInvoice/{id} used for delete Invoice from Invoice list",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "delete invoice successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Invoice Detail",
                "operationId": "",
                "tags": [
                    "invoice"
                ],
                "responses": {
                    "200": {
                        "description": "viewInviocs/{id} used for get invoice frominvoices list",
                        "headers": {
                            "x-next": {
                                "description": "Invoice detail",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/invoicedetail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/newInvoice": {
            "get": {
                "summary": "Invoice Detail",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "Invoice detail",
                        "headers": {
                            "x-next": {
                                "description": "Invoice List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/newinvoiceList"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/buyers": {
            "get": {
                "summary": "Buyer Detail",
                "operationId": "",
                "tags": [
                    "buyerdetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "getBuyers used for get list of buyers",
                        "headers": {
                            "x-next": {
                                "description": "Buyer List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/buyers/{id}": {
            "post": {
                "summary": "Details about a buyer",
                "operationId": "setbuyer",
                "requestBody": {
                    "description": "setBuyers used for add new buyer in buyers list",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/selectBuyersData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Buyer Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/committee": {
            "get": {
                "summary": "Committee Detail",
                "operationId": "",
                "tags": [
                    "committeedetail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "searchCommittee used for get Committee list",
                        "headers": {
                            "x-next": {
                                "description": "committee List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Details about a set committee members",
                "operationId": "setbuyer",
                "requestBody": {
                    "description": "addCommittee used for add new Committee in committee list",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/selectCommitteeMembers"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Committee Members Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/committee/{type}": {
            "parameters": [
                {
                    "name": "type",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Detail of Committee Type",
                "operationId": "",
                "tags": [
                    "committeetype"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "getCommittee used for get Committee type",
                        "headers": {
                            "x-next": {
                                "description": "Committee Type",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch committee type Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/committee"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor": {
            "post": {
                "summary": "Details about a vendor",
                "operationId": "",
                "requestBody": {
                    "description": "addVendor used for add new vendor in vendors list",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/vendorData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Vendor Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Vendor Detail",
                "operationId": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Get vendor details",
                        "headers": {
                            "x-next": {
                                "description": "Vendor List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/userData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor/{id}": {
            "delete": {
                "summary": "Delete Vendor",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "delete vendor data",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Delete Vendor Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/chat": {
            "get": {
                "summary": "Detail of recently mail",
                "operationId": "",
                "tags": [
                    "committeetype"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "recentCommunication used to get reacent mail from communication list",
                        "headers": {
                            "x-next": {
                                "description": "recently mail",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 4,
                                            "items": {
                                                "$ref": "#/components/schemas/recentlyMail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mailList": {
            "get": {
                "summary": "Detail of All mail",
                "operationId": "",
                "tags": [
                    "mail"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "featchAllMail used for get all mails list",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "emailType": {
                                            "type": "string",
                                            "description": "type of email like inbox, draft, send, etc...."
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/recentlyMailDetail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Details about a add emails",
                "operationId": "createEmail",
                "requestBody": {
                    "description": "Request body to Create Email",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/emailData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "sendEmail used for send email from the contact list",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Email Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/mailList/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about an Email",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "getEmailData/{id} used from get email data by emails id",
                        "headers": {
                            "x-next": {
                                "description": "Email detail",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/recentlyMailDetail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Detail about email is readred",
                "operationId": "read email",
                "requestBody": {
                    "description": "post id and type of email which is readed",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/readEmail"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "post id and type of email which is readed",
                        "headers": {
                            "x-next": {
                                "description": "",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "email is readed Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Email",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "deleteEmail/{id} used for delete email by id from emails table",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Delete Email Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bugetOverviewData": {
            "get": {
                "summary": "Details of BudgetOverview",
                "operationId": "",
                "tags": [
                    "BudgetOverview"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "getBudgetOverviewData used for get budgetOverview list or table",
                        "headers": {
                            "x-next": {
                                "description": "BudgetOverview List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch BudgetOverview Successfully"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/bugetOverview"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Details about a Requester",
                "operationId": "createRequisition",
                "requestBody": {
                    "description": "Request body to create requistion",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "items": {
                                    "$ref": "#/components/schemas/requisitionData"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "Delete Requisition List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Add Requisition Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {}
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bugetOverviewData/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "getBudgetAllocated/{id} used for get particular budget details from budgetOverview list",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "Details about a get track FRP by id",
                        "headers": {
                            "x-next": {
                                "description": "FRP by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/budgetAllocated"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/kanbanList": {
            "get": {
                "summary": "kanban list",
                "operationId": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "kanban list",
                        "headers": {
                            "x-next": {
                                "description": "kanban list",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 12,
                                            "items": {
                                                "$ref": "#/components/schemas/kanbanDetail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "fetchKanbanList used for get kanban table",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboardData": {
            "get": {
                "summary": "Dashboard Detail",
                "operationId": "",
                "responses": {
                    "200": {
                        "description": "getdashboardData used for get entire dashboard data",
                        "headers": {
                            "x-next": {
                                "description": "Dashboard Detail",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "object",
                                            "$ref": "#/components/schemas/dashboardDetail"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trackfrpdata/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "schema": {
                        "type": "string"
                    }
                }
            ],
            "get": {
                "summary": "Details about a get track FRP by id",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "gettrackfrpdata{id} used from get details of particular frp from frp table ",
                        "headers": {
                            "x-next": {
                                "description": "FRP by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/trackFRP"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sendrfq": {
            "get": {
                "summary": "Details about a post track FRQ by id",
                "operationId": "",
                "tags": [
                    "requisition"
                ],
                "responses": {
                    "200": {
                        "description": "get track used from post details of frq from frq table ",
                        "headers": {
                            "x-next": {
                                "description": "FRP by id",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "$ref": "#/components/schemas/trackFRP"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "summary": "get notification data",
                "operationId": "",
                "tags": [
                    "notification"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "",
                        "headers": {
                            "x-next": {
                                "description": "getNotificationData used for get list of notifications",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Get Notification Data Successfully"
                                        },
                                        "type": {
                                            "type": "string",
                                            "default": "SUCCESS"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 6,
                                            "items": {
                                                "$ref": "#/components/schemas/notificationData"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reorts": {
            "get": {
                "summary": "Details of Reports",
                "operationId": "",
                "tags": [
                    "Reports"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "getReports used for get list of reports",
                        "headers": {
                            "x-next": {
                                "description": " Reports List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "string",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string",
                                            "default": "Fetch BudgetOverview Successfully"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 7,
                                            "items": {
                                                "$ref": "#/components/schemas/reports"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendorQuatation": {
            "get": {
                "summary": "Vendor Quatation List",
                "operationId": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Vendor Quatation List",
                        "headers": {
                            "x-next": {
                                "description": "Vendor Quatation List",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer",
                                            "format": "int64",
                                            "x-faker": "datatype.number({ \"min\": 200, \"max\": 200 })"
                                        },
                                        "message": {
                                            "type": "string"
                                        },
                                        "type": {
                                            "type": "string"
                                        },
                                        "object": {
                                            "type": "array",
                                            "x-count": 5,
                                            "items": {
                                                "$ref": "#/components/schemas/venderQuatation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "default": {
                        "description": "unexpected error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "department": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })",
                        "description": "id of the department"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}",
                        "description": "name of the depertment"
                    }
                }
            },
            "readEmail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "descriprtion": "Id of read email or mail"
                    },
                    "type": {
                        "type": "string",
                        "descriprtion": "type of read email or mail its might be span , draft and etc"
                    }
                }
            },
            "currency": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })",
                        "descriprtion": "Id of the currencies"
                    },
                    "countryName": {
                        "type": "string",
                        "default": "Reactive secured line",
                        "x-faker": "{{address.country}}",
                        "descriprtion": "CountryName of the currencies"
                    },
                    "countryCode": {
                        "type": "string",
                        "x-faker": "{{address.countryCode}}",
                        "descriprtion": "CountryCode of the currencies"
                    },
                    "code": {
                        "type": "string",
                        "x-faker": "{{finance.currencyCode}}",
                        "descriprtion": "Code of the currencies"
                    }
                }
            },
            "requisition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id of the Requisition"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "created date of the Requisition"
                    },
                    "profilePic": {
                        "type": "string",
                        "x-faker": "image.imageUrl",
                        "description": "Profile pic of the Requisition"
                    },
                    "totalPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "total amount of the Requisition"
                    },
                    "notes": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}",
                        "description": "note for the Requisition"
                    },
                    "startDate": {
                        "type": "string",
                        "x-faker": "{{date.past}}",
                        "description": "startDate use for start working on Requisition"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "x-faker": "{{date.future}}",
                        "description": "deliveryDate of Requisition"
                    },
                    "financialYear":{
                        "type": "string",
                        "x-faker": "{{date.past}}",
                        "description": "financialYear of Requisition"
                    },
                    "paymentTerms": {
                        "type": "string"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "createdBy use for requester of  Requisition"
                    },
                    "roleName": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}",
                        "description": "roleName use for requester name of  Requisition"
                    },
                    "department": {
                        "$ref": "#/components/schemas/department",
                        "description": "department list for requisition"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currency",
                        "description": "currency details for requisition"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of the requisition"
                    },
                    "requisitionType": {
                        "type": "string",
                        "x-faker": "{{lorem.word}}",
                        "description": "requisitionType type of the requisition"
                    },
                    "requistionItem": {
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems",
                            "description": "requisitionItem of the requisition"
                        }
                    }
                }
            },
            "approveRequisition": {
                "type": "object",
                "properties": {
                    "requisitionId": {
                        "type": "string",
                        "description": "requisitionId id of approved requisition"
                    },
                    "roleName": {
                        "type": "string",
                        "description": "rolename of approved requisition"
                    }
                }
            },
            "budgetAllocated": {
                "type": "object",
                "properties": {
                    "budget": {
                        "$ref": "#/components/schemas/bugetOverview",
                        "description": "budget of particular request from list"
                    },
                    "depTableData": {
                        "type": "array",
                        "x-count": "7",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ItemDescription": {
                                    "type": "string",
                                    "x-faker": "{{commerce.productName}}",
                                    "description": "ItemDescription of department table"
                                },
                                "requisitionType": {
                                    "type": "string",
                                    "description": "requisitiontype of department table"
                                },
                                "Price": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "finance.amount",
                                    "description": "price of department table"
                                },
                                "RqNo": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })",
                                    "description": "RqNo of department table"
                                },
                                "dep": {
                                    "type": "string",
                                    "x-faker": "{{commerce.department}}",
                                    "description": "dep of department table"
                                },
                                "Images": {
                                    "type": "array",
                                    "x-count": "8",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "MembersProfile": {
                                                "type": "string",
                                                "x-faker": "{{image.imageUrl}}",
                                                "description": "images of department table contacts"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "approvePo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "Status": {
                        "type": "string",
                        "description": "status of  approve purchase order Requester"
                    },
                    "DeliveryStatus": {
                        "type": "string",
                        "description": "DeliveryStatus of  approve purchase order Requester"
                    },
                    "PaymentStatus": {
                        "type": "string",
                        "description": "PaymentStatus of  approve purchase order Requester"
                    },
                    "ContactNumber": {
                        "type": "string",
                        "x-faker": "{{phone.phoneNumber }}",
                        "description": "contactNumber of approve purchase order Requester"
                    },
                    "Department": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}",
                        "description": "Department of approve purchase order Requester"
                    },
                    "RequestorAvatar": {
                        "type": "string",
                        "x-faker": "{{image.imageUrl}}",
                        "description": "image of approve purchase order Requester"
                    },
                    "RequestorName": {
                        "type": "string",
                        "x-faker": "{{internet.userName}}",
                        "description": "Name of approve purchase order Requester"
                    },
                    "Item": {
                        "type": "string",
                        "x-faker": "{{commerce.productName}}",
                        "description": "Item of approve purchase order Requester"
                    },
                    "CreationOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "Created date of approve purchase order Requester"
                    },
                    "VendorEmail": {
                        "type": "string",
                        "x-faker": "{{internet.email}}",
                        "description": "vendorEmail of approve purchase order Requester"
                    },
                    "NatureOfBusiness": {
                        "type": "string",
                        "x-faker": "{{commerce.product}}",
                        "description": "vendorName of approve purchase order Requester"
                    },
                    "VendorAvatar": {
                        "type": "string",
                        "x-faker": "{{image.imageUrl}}",
                        "description": "image or profilePic of approve purchase order Requester"
                    },
                    "VendorName": {
                        "type": "string",
                        "x-faker": "{{internet.userName}}",
                        "description": "vendorName of approve purchase order Requester"
                    },
                    "Comment": {
                        "type": "text",
                        "x-faker": "{{lorem.sentences}}",
                        "description": "conmment on approve purchase order by Requester"
                    },
                    "Limit": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10000, \"max\": 100000 })",
                        "description": "limit of approve purchase order Requester"
                    }
                }
            },
            "addapprovePo": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "id of  approve purchase order Requester"
                    },
                    "Status": {
                        "type": "string",
                        "description": "status of  approve purchase order Requester"
                    }
                }
            },
            "approverquisition": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id of approve purchase order"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "created date of approve purchase order"
                    },
                    "totalPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "total Price of approve purchase order"
                    },
                    "notes": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}",
                        "description": "note of approve purchase order"
                    },
                    "startDate": {
                        "type": "string",
                        "x-faker": "{{date.past}}",
                        "description": "process statrted date of approve purchase order"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "x-faker": "{{date.future}}",
                        "description": "delivery date of approve purchase order"
                    },
                    "paymentTerms": {
                        "type": "string",
                        "description": "payment terms of approve purchase order"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "requester name of approve purchase order"
                    },
                    "roleName": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}",
                        "description": "role name of approve purchase order"
                    },
                    "department": {
                        "$ref": "#/components/schemas/department",
                        "description": "department of approve purchase order list department "
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currency",
                        "description": "curreny of approve purchase order payment"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of approve purchase order"
                    },
                    "requisitionType": {
                        "type": "string",
                        "x-faker": "{{lorem.word}}",
                        "description": "type of approve purchase order requisition"
                    },
                    "requistionItem": {
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems",
                            "description": "array of approve purchase order requisition items"
                        }
                    }
                }
            },
            "requisitionData": {
                "type": "object",
                "properties": {
                    "requestor": {
                        "description": "role of the requester",
                        "type": "string"
                    },
                    "financialYear": {
                        "description": "Year of the requisition raised",
                        "type": "string"
                    },
                    "departmentId": {
                        "description": "selected department id",
                        "type": "integer"
                    },
                    "currencyId": {
                        "description": "selected currency id",
                        "type": "integer"
                    },
                    "requisitionType": {
                        "type": "string"
                    },
                    "purpose": {
                        "description": "Purpose of the requisition",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the requisition, value should be the requisitionStatus",
                        "type": "string"
                    },
                    "files": {
                        "description": "list of object containing description and file",
                        "type": "object"
                    },
                    "requisitionLineItems": {
                        "description": "list of requisition line items data",
                        "type": "array"
                    },
                    "requisitionLineItemFiles": {
                        "description": "list of excel file containing the data of requisition line items",
                        "type": "array"
                    }
                }
            },
            "updateRequisitionData": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "edit requisition id",
                        "type": "integer"
                    },
                    "requestor": {
                        "description": "role of the requester",
                        "type": "string"
                    },
                    "financialYear": {
                        "description": "Year of the requisition raised",
                        "type": "string",
                        "x-faker": "date.past"
                    },
                    "departmentId": {
                        "description": "selected department id",
                        "type": "integer"
                    },
                    "currencyId": {
                        "description": "selected currency id",
                        "type": "integer"
                    },
                    "purpose": {
                        "description": "Purpose of the requisition",
                        "type": "string"
                    },
                    "status": {
                        "description": "Status of the requisition, value should be the requisitionStatus",
                        "type": "string"
                    },
                    "files": {
                        "description": "list of object containing description and file",
                        "type": "object"
                    },
                    "requisitionLineItems": {
                        "description": "list of requisition line items data",
                        "type": "array"
                    },
                    "requisitionLineItemFiles": {
                        "description": "list of excel file containing the data of requisition line items",
                        "type": "array"
                    }
                }
            },
            "userData": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id of user"
                    },
                    "company": {
                        "type": "string",
                        "x-faker": "{{company.companyName}}",
                        "description": "comapany name of user or contact "
                    },
                    "email": {
                        "type": "string",
                        "x-faker": "{{internet.email}}",
                        "description": "email of user or contact"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "name of user or contact"
                    },
                    "position": {
                        "type": "string",
                        "x-faker": "{{company.catchPhrase}}",
                        "description": "position of user or contact"
                    },
                    "profile": {
                        "type": "string",
                        "x-faker": "{{image.imageUrl}}",
                        "description": "profile picture of user or contact"
                    },
                    "contNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1000000000, \"max\": 9999999999 })",
                        "description": "phone number of user or contact"
                    }
                }
            },
            "invoiceList": {
                "type": "object",
                "properties": {
                    "RequisitionsNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })",
                        "description": "id of requisition"
                    },
                    "RequestDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "date of requisition raised"
                    },
                    "RequestDepartment": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}",
                        "description": "department of requisition"
                    },
                    "Requestor": {
                        "type": "string",
                        "x-faker": "{{internet.email}}",
                        "description": "name of requisition requestor"
                    },
                    "RequisitionsTotal": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "{{commerce.price}}",
                        "description": "date of requisition raised"
                    },
                    "status": {
                        "type": "string",
                        "default": "completed",
                        "description": "status of requisition"
                    }
                }
            },
            "newinvoiceList": {
                "type": "object",
                "properties": {
                    "Address": {
                        "type": "string",
                        "x-faker": "{{address.streetName}} {{address.state}},{{address.zipCodeByState}} {{address.country}}",
                        "description": "address for new invoice"
                    },
                    "CompanyDesription": {
                        "type": "array",
                        "x-count": "7",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ComapanyName": {
                                    "type": "string",
                                    "x-faker": "{{company.companyName}}",
                                    "description": "description of company for new invoice"
                                },
                                "ComapanyType": {
                                    "type": "string",
                                    "x-faker": "{{commerce.productName}}",
                                    "description": "type of company fro new invoice"
                                }
                            }
                        }
                    },
                    "Email": {
                        "type": "string",
                        "x-faker": "{{internet.email}}",
                        "description": "email of new invoice"
                    },
                    "ContactNumber": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "phone.phoneNumber",
                        "description": "phone number of new invoice"
                    },
                    "ItemDesription": {
                        "type": "array",
                        "x-count": "7",
                        "items": {
                            "type": "object",
                            "properties": {
                                "ItemDescription": {
                                    "type": "string",
                                    "x-faker": "{{commerce.productName}}",
                                    "description": "item description of new invoive"
                                },
                                "Quantity": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 100 })",
                                    "description": "qunatity of item for new invoice"
                                },
                                "Price": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "finance.amount",
                                    "description": "price of item for new invoice"
                                }
                            }
                        }
                    }
                }
            },
            "invoicedetail": {
                "type": "object",
                "properties": {
                    "requisitionsNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id or requisition number of particular invoice"
                    },
                    "requestDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "date of particular invoice created"
                    },
                    "requestDepartment": {
                        "$ref": "#/components/schemas/department",
                        "description": "department of particular invoice"
                    },
                    "requestor": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}",
                        "description": "name of requester"
                    },
                    "requisitionsTotal": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "total sum of amount for invoice"
                    },
                    "tax": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.float({ \"min\": 1, \"max\": 10 })",
                        "description": "total tax of amount for invoice"
                    },
                    "status": {
                        "type": "string",
                        "default": "completed",
                        "description": " status of invoice"
                    },
                    "invoiceItem": {
                        "type": "array",
                        "x-count": 2,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems",
                            "description": "items of invoice"
                        }
                    }
                }
            },
            "selectBuyersData": {
                "type": "object",
                "properties": {
                    "requisitionID": {
                        "type": "string",
                        "description": "request id of selected buyer "
                    },
                    "buyersId": {
                        "type": "array",
                        "description": "id of buyers id"
                    }
                }
            },
            "committee": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })",
                        "description": "id of committee"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}",
                        "description": "name of committee"
                    }
                }
            },
            "selectCommitteeMembers": {
                "type": "object",
                "properties": {
                    "userID": {
                        "type": "string",
                        "description": "id of committee"
                    },
                    "membersId": {
                        "type": "array",
                        "description": "id of committee members"
                    }
                }
            },
            "requisitionItems": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000 })",
                        "description": "id of requisition item"
                    },
                    "price": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1000, \"max\": 10000 })",
                        "description": "price of requisition item"
                    },
                    "itemDescription": {
                        "type": "string",
                        "x-faker": "commerce.productName",
                        "description": "description of requisition item"
                    },
                    "orderQuantity": {
                        "type": "integer",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })",
                        "description": "order quantity of requisition item"
                    },
                    "ratePerItem": {
                        "type": "integer",
                        "x-faker": "datatype.number({ \"min\": 1000, \"max\": 100000 })",
                        "description": "price of requisition item"
                    }
                }
            },
            "addStatusRfp": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "comment": {
                        "type": "string"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of RFP"
                    }
                }
            },
            "generatePoDetail": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "id of generate purcahse order"
                    },
                    "startDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "date of genertate Purcahse Order"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "delivery date of generate purchase order"
                    },
                    "paymentTerms": {
                        "type": "string",
                        "description": "payment terms of generate purchase order"
                    },
                    "otherTerms": {
                        "type": "string",
                        "description": "other terms of generate purchase order"
                    }
                }
            },
            "contactData": {
                "type": "object",
                "properties": {
                    "company": {
                        "type": "string",
                        "description": "comapany name of contact person"
                    },
                    "email": {
                        "type": "string",
                        "description": "email of contact person"
                    },
                    "firstName": {
                        "type": "string",
                        "description": "first name of contact person"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "last name of contact person"
                    },
                    "title": {
                        "type": "string",
                        "description": "title of contact person"
                    },
                    "profile": {
                        "type": "string",
                        "description": "profile of contact person"
                    },
                    "contactNo": {
                        "type": "integer",
                        "format": "int64",
                        "default": "+1234567859",
                        "description": "contact Number of contact person"
                    }
                }
            },
            "recievedrfq": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "id of recieved RFP"
                    },
                    "createdOn": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "created or generated date of recieved RFP"
                    },
                    "totalPrice": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })",
                        "description": "total price of recieved RFP"
                    },
                    "notes": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}",
                        "description": "notes related to recieved RFP"
                    },
                    "createdBy": {
                        "type": "string",
                        "x-faker": "{{name.firstName}} {{name.lastName}}",
                        "description": "name of person who created recieved RFP"
                    },
                    "roleName": {
                        "type": "string",
                        "x-faker": "{{name.firstName}}",
                        "description": "role name of person recieved RFP"
                    },
                    "department": {
                        "$ref": "#/components/schemas/department",
                        "description": "department of recieved RFP"
                    },
                    "currency": {
                        "$ref": "#/components/schemas/currency",
                        "description": "currency details of recieved RFP"
                    },
                    "status": {
                        "type": "string",
                        "description": "status of recieved RFP"
                    },
                    "requisitionType": {
                        "type": "string",
                        "description": "requisition type of recieved RFP"
                    },
                    "requistionItem": {
                        "type": "array",
                        "x-count": 7,
                        "items": {
                            "$ref": "#/components/schemas/requisitionItems",
                            "description": "requistition type array of recieved RFP"
                        }
                    },
                    "vendoreDetail": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-faker": "{{name.firstName}}",
                                "description": "name of Vendor"
                            },
                            "email": {
                                "type": "string",
                                "x-faker": "{{internet.email}}",
                                "description": "email of Vendor"
                            },
                            "nature": {
                                "type": "string",
                                "description": "nature of Vendor"
                            },
                            "location": {
                                "type": "string",
                                "description": "location of Vendor"
                            },
                            "phone": {
                                "type": "integer",
                                "format": "int64",
                                "x-faker": "datatype.number({ \"min\": 1, \"max\": 10000000000 })",
                                "description": "contact number of vendor"
                            },
                            "relation": {
                                "type": "string",
                                "description": "relation of Vendor"
                            }
                        }
                    }
                }
            },
            "vendorData": {
                "type": "object",
                "properties": {
                    "firstName": {
                        "type": "string",
                        "description": "first name of particular Vendor"
                    },
                    "lastName": {
                        "type": "string",
                        "description": "last name of particular Vendor"
                    },
                    "fatherName": {
                        "type": "string",
                        "description": "father name of particular Vendor"
                    },
                    "designation": {
                        "type": "string",
                        "description": "designation of particular Vendor"
                    },
                    "companyName": {
                        "type": "string",
                        "description": "company name of particular Vendor"
                    },
                    "directorName": {
                        "type": "string",
                        "description": "director name of particular Vendor"
                    },
                    "address": {
                        "type": "string",
                        "description": "address of particular Vendor"
                    },
                    "city": {
                        "type": "string",
                        "description": "city of particular Vendor"
                    },
                    "state": {
                        "type": "string",
                        "description": "state of particular Vendor"
                    },
                    "business": {
                        "type": "string",
                        "description": "business of particular Vendor"
                    },
                    "legalStatus": {
                        "type": "string",
                        "description": "legal status of particular Vendor"
                    },
                    "companyCategory": {
                        "type": "string",
                        "description": "company Category of particular Vendor"
                    },
                    "captcha": {
                        "type": "string",
                        "description": "captcha for particular Vendor"
                    },
                    "panNo": {
                        "type": "string",
                        "description": "panNumber of particular Vendor"
                    },
                    "gender": {
                        "type": "string",
                        "description": "gender of particular Vendor"
                    },
                    "phoneNo": {
                        "type": "integer",
                        "format": "int64",
                        "description": "phone number of particular Vendor"
                    },
                    "RegistrationNo": {
                        "type": "integer",
                        "format": "int64",
                        "description": "registration number of particular Vendor"
                    },
                    "brithDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "DOB or birth date of particular Vendor"
                    },
                    "bidder": {
                        "type": "string",
                        "description": "bidder name of particular Vendor"
                    },
                    "postalCode": {
                        "type": "integer",
                        "format": "int64",
                        "description": "PostalCode or PinCode of particular Vendor"
                    },
                    "establishment": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "establishment of particular Vendor"
                    }
                }
            },
            "recentlyMail": {
                "type": "object",
                "properties": {
                    "profile": {
                        "type": "string",
                        "x-faker": "{{image.imageUrl}}",
                        "description": "profile of recent mail"
                    },
                    "name": {
                        "type": "string",
                        "x-faker": "{{internet.userName}}",
                        "description": "name of user in recent mail"
                    }
                }
            },
            "emailData": {
                "type": "object",
                "properties": {
                    "requestorId": {
                        "type": "integer",
                        "description": "requestor id of email"
                    },
                    "to": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "array of requestor type for email"
                                },
                                "sentTo": {
                                    "type": "string",
                                    "description": "person who recieved email"
                                }
                            }
                        }
                    },
                    "bcc": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "bcc type of email"
                                },
                                "toBcc": {
                                    "type": "string",
                                    "description": "to bcc type of email"
                                }
                            }
                        }
                    },
                    "subject": {
                        "type": "string",
                        "description": "subject of email"
                    },
                    "message": {
                        "type": "string"
                    },
                    "attachedFiles": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string",
                                    "description": "file type for email"
                                },
                                "fileName": {
                                    "type": "string",
                                    "description": "file name for email"
                                }
                            }
                        }
                    }
                }
            },
            "recentlyMailDetail": {
                "type": "object",
                "properties": {
                    "sender": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "name of recent mail"
                            },
                            "profilePic": {
                                "type": "string",
                                "x-faker": "{{image.imageUrl}}",
                                "description": "image url of recent mail user profile"
                            },
                            "email": {
                                "type": "string",
                                "x-faker": "{{internet.email}}",
                                "description": "email of recent mail"
                            },
                            "id": {
                                "type": "integer",
                                "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })",
                                "description": "id of recent mail user"
                            }
                        }
                    },
                    "subject": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}",
                        "description": "subject of recent mail"
                    },
                    "type": {
                        "type": "string",
                        "default": "important",
                        "description": "type of recent mail"
                    },
                    "time": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "time of recent mail created"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })",
                        "description": "id of user"
                    },
                    "body": {
                        "type": "string",
                        "x-faker": "{{lorem.sentences}}",
                        "description": "body or paragraph of recent mail"
                    },
                    "isSnooze": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}",
                        "description": "name of recent mail"
                    },
                    "isStar": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}"
                    },
                    "isRead": {
                        "type": "string",
                        "x-faker": "{{random.boolean}}",
                        "description": "messages is readed or not"
                    },
                    "tags": {
                        "type": "array",
                        "x-count": 3,
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "x-faker": "{{name.jobDescriptor}}",
                                    "description": "list of recent mail type"
                                }
                            }
                        }
                    },
                    "attechment": {
                        "type": "array",
                        "x-count": 4,
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string",
                                    "x-faker": "{{internet.url}}"
                                },
                                "fileName": {
                                    "type": "string",
                                    "x-faker": "{{lorem.word}}"
                                },
                                "size": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 100 })"
                                }
                            }
                        }
                    },
                    "isPined": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}"
                    }
                }
            },
            "emaildetail": {
                "type": "object",
                "properties": {
                    "sender": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "description": "name of mail senders"
                            },
                            "profilePic": {
                                "type": "string",
                                "x-faker": "{{image.imageUrl}}",
                                "description": "profile pic of mail senders"
                            },
                            "email": {
                                "type": "string",
                                "x-faker": "{{internet.email}}",
                                "description": "email of mail senders"
                            },
                            "id": {
                                "type": "integer",
                                "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })",
                                "description": "id of mail senders"
                            }
                        }
                    },
                    "subject": {
                        "type": "string",
                        "x-faker": "{{lorem.sentence}}"
                    },
                    "type": {
                        "type": "string",
                        "default": "important"
                    },
                    "time": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime"
                    },
                    "body": {
                        "type": "string",
                        "x-faker": "{{lorem.sentences}}"
                    },
                    "isSnooze": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}"
                    },
                    "isStar": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}"
                    },
                    "attechment": {
                        "type": "array",
                        "x-count": 4,
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "type": "string"
                                },
                                "url": {
                                    "type": "string",
                                    "x-faker": "{{internet.url}}"
                                },
                                "fileName": {
                                    "type": "string"
                                }
                            }
                        }
                    },
                    "isPined": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}"
                    }
                }
            },
            "kanbanDetail": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "x-faker": "{{lorem.words}}",
                        "description": "type of kanban"
                    },
                    "time": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "datatype.datetime",
                        "description": "time of kanban created"
                    },
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })",
                        "description": "id of kanban"
                    },
                    "progressPer": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 10 })",
                        "description": "percentage of completed kanban for progressbar"
                    },
                    "type": {
                        "type": "string",
                        "x-faker": "{{lorem.word}}",
                        "description": "type of kanban"
                    },
                    "isPined": {
                        "type": "boolean",
                        "x-faker": "{{random.boolean}}",
                        "description": "pined kanban"
                    },
                    "users": {
                        "type": "array",
                        "x-count": 3,
                        "items": {
                            "type": "object",
                            "properties": {
                                "url": {
                                    "type": "string",
                                    "x-faker": "{{image.imageUrl}}",
                                    "description": "image of profile pic url of requester"
                                }
                            }
                        }
                    }
                }
            },
            "dashboardDetail": {
                "type": "object",
                "properties": {
                    "totalRFP": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 1000 })",
                        "description": "total RFP fro dashboard"
                    },
                    "todayRFP": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 10000 })",
                        "description": "today RFP for dashboard"
                    },
                    "email": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 10000 })",
                        "description": "email id for dashboard"
                    },
                    "completeOrder": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 10000 })",
                        "description": "completed orders of RFP for dashboard"
                    },
                    "inprogressOrder": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 1000 })",
                        "description": "inprogress order of RFP for dashboard"
                    },
                    "totalspent": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 100000 })",
                        "description": "total spent amount of RFP"
                    },
                    "requisitionPendding": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 1000 })",
                        "description": "pendding requisition of frp"
                    },
                    "invoices": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 1000 })",
                        "description": "invoices of frp"
                    },
                    "totalPO": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 1000 })",
                        "description": "total of Purchase Orders"
                    },
                    "penddingPo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 1000 })",
                        "description": "total of Pendding Purchase Orders"
                    },
                    "requisitionChart": {
                        "type": "array",
                        "x-count": 6,
                        "description": "list of requisition chart data",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string",
                                    "x-faker": "{{date.month}}",
                                    "description": "name of the month"
                                },
                                "TotalPaid": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 100 })",
                                    "description": "total Paid amount"
                                },
                                "TotalUnpaid": {
                                    "type": "integer",
                                    "format": "int64",
                                    "x-faker": "datatype.number({ \"min\": 1, \"max\": 100 })",
                                    "description": "total unpaid amount or balance"
                                }
                            }
                        }
                    }
                }
            },
            "invitationData": {
                "type": "object",
                "properties": {
                    "userId": {
                        "description": "sender user id",
                        "type": "integer"
                    },
                    "inviteusers": {
                        "description": "invite user email and name list",
                        "type": "array"
                    }
                }
            },
            "trackFRP": {
                "type": "object",
                "properties": {
                    "orderedDate": {
                        "type": "string",
                        "x-faker": "{{date.past}}",
                        "description": "order date of track FRP"
                    },
                    "approvedDate": {
                        "type": "string",
                        "x-faker": "{{date.past}}",
                        "description": "approved date of FRP"
                    },
                    "poGenerateDate": {
                        "type": "string",
                        "x-faker": "{{date.recent}}",
                        "description": "date of Purcahsed order created or generated"
                    },
                    "deliveryDate": {
                        "type": "string",
                        "x-faker": "{{date.future}}",
                        "description": "delivery date of FRP"
                    },
                    "trackUpdates": {
                        "type": "array",
                        "x-count": 6,
                        "description": "lsit of FRP details ",
                        "items": {
                            "type": "object",
                            "properties": {
                                "deliveryDate": {
                                    "type": "string",
                                    "x-faker": "{{date.future}}",
                                    "description": "delivery date of particular FRP"
                                },
                                "location": {
                                    "type": "string",
                                    "x-faker": "{{address.county}}",
                                    "description": "location of created FRP"
                                },
                                "department": {
                                    "type": "string",
                                    "x-faker": "{{commerce.department}}",
                                    "description": "department of Created FRP"
                                },
                                "orderedDate": {
                                    "type": "string",
                                    "x-faker": "{{date.past}}",
                                    "description": "ordered date of FRP"
                                }
                            }
                        }
                    }
                }
            },
            "bugetOverview": {
                "type": "object",
                "properties": {
                    "TotalBudget": {
                        "type": "string",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 200000, \"max\": 2000000 })",
                        "description": "total budget allocated for Rquisition"
                    },
                    "UsedBudget": {
                        "type": "string",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 2000, \"max\": 20000 })",
                        "description": "total used budget for Rquisition"
                    },
                    "UsedBudgetPercentage": {
                        "type": "string",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 10, \"max\": 50 })",
                        "description": "percentage of used budget"
                    },
                    "CommitedBudgetPercentage": {
                        "type": "string",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 60, \"max\": 80})",
                        "description": "total commited budget in percentage"
                    },
                    "AvaliableBudget": {
                        "type": "string",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 200000, \"max\": 2000000 })",
                        "description": "Avaliable or remaing budget for Rquisition"
                    },
                    "CommitedBudget": {
                        "type": "string",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 20000, \"max\": 200000 })",
                        "description": "commited budget for requisitiuon"
                    },
                    "BudgetId": {
                        "type": "intiger",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 200000 })",
                        "description": ""
                    },
                    "Department": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}",
                        "description": "department who created or rised requisition"
                    }
                }
            },
            "notificationData": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string",
                        "x-faker": "{{internet.userName}}",
                        "description": "title of any notification"
                    },
                    "img": {
                        "type": "string",
                        "x-faker": "{{image.imageUrl}}",
                        "description": "image of any notification"
                    },
                    "description": {
                        "type": "string",
                        "x-faker": "{{lorem.text}}",
                        "description": "description of any notification"
                    }
                }
            },
            "reports": {
                "type": "object",
                "properties": {
                    "requisitionDepartment": {
                        "type": "string",
                        "x-faker": "{{commerce.department}}",
                        "description": "department of report"
                    },
                    "requisitionTypes": {
                        "type": "string",
                        "description": "type of requisition for report"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "{{date.past}}",
                        "description": "last updated date of report"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "{{date.past}}",
                        "description": "created date of report"
                    },
                    "profile": {
                        "type": "array",
                        "x-count": 10,
                        "description": "list of profiles",
                        "items": {
                            "type": "object",
                            "properties": {
                                "userProfile": {
                                    "type": "string",
                                    "x-faker": "{{image.imageUrl}}",
                                    "description": "user profile picture"
                                }
                            }
                        }
                    },
                    "notifications": {
                        "type": "array",
                        "x-count": 4,
                        "items": {
                            "type": "object",
                            "properties": {
                                "notification": {
                                    "type": "string",
                                    "description": "typr of notifications"
                                }
                            }
                        }
                    }
                }
            },
            "venderQuatation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "venderNo": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    },
                    "vendorName": {
                        "type": "string",
                        "x-faker": "{{lorem.word}}"
                    },
                    "requisitionType": {
                        "type": "string",
                        "x-faker": "{{lorem.word}}"
                    },
                    "requisitionDate": {
                        "type": "string",
                        "format": "date",
                        "x-faker": "{{datatype.datetime}}"
                    },
                    "requisitionTotal": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 100, \"max\": 100000 })"
                    },
                    "currency": {
                        "type": "integer",
                        "format": "int64",
                        "x-faker": "datatype.number({ \"min\": 1, \"max\": 100000 })"
                    }
                }
            },
            "Error": {
                "type": "object",
                "required": [
                    "code",
                    "message"
                ],
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            }
        },
        "securitySchemes": {
            "BasicAuth": {
                "type": "http",
                "scheme": "basic"
            }
        }
    },
    "security": [
        {
            "BasicAuth": []
        }
    ]
}